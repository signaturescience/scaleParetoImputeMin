% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_scale_pareto.R
\name{step_scale_pareto}
\alias{step_scale_pareto}
\alias{tidy.step_scale_pareto}
\title{Scaling Numeric Data by the square root of the standard deviation}
\usage{
step_scale_pareto(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  sds = NULL,
  na_rm = TRUE,
  skip = FALSE,
  id = recipes::rand_id("pareto")
)

\method{tidy}{step_scale_pareto}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the sequence
of operations for this recipe.}

\item{...}{One or more selector functions to choose variables for this step.}

\item{role}{Not used by this step since no new variables are created.}

\item{trained}{A logical to indicate if the quantities for preprocessing have
been estimated.}

\item{sds}{A named numeric vector of standard deviations. This is \code{NULL}
until computed by \code{\link[=prep]{prep()}}.}

\item{na_rm}{A logical value indicating whether \code{NA} values should be removed
when computing the standard deviation.}

\item{skip}{A logical. Should the step be skipped when the recipe is baked by
bake()? While all operations are baked when prep() is run, some operations
may not be able to be conducted on new data (e.g. processing the outcome
variable(s)). Care should be taken when using skip = TRUE as it may affect
the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_scale_pareto} object.}
}
\description{
\code{step_scale_pareto()} creates a \emph{specification} of a recipe step that will
normalize numeric data to have a square root of the standard deviation of
one.
}
\details{
Scaling data means that the standard deviation of a
variable is divided out of the data. \code{step_scale_pareto} estimates
the variable square root standard deviations from the data used in the
\code{training} argument of \code{prep.recipe}.
\code{bake.recipe} then applies the scaling to new data sets
using these square root standard deviations.
}
\section{Tidying}{
When you \code{\link[=tidy.recipe]{tidy()}} this step, a tibble with columns
\code{terms} (the selectors or variables selected) and \code{value} (the
square root standard deviations) is returned.
}

\examples{
\dontshow{if (rlang::is_installed("modeldata")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
data(biomass, package = "modeldata")

biomass_tr <- biomass[biomass$dataset == "Training", ]
biomass_te <- biomass[biomass$dataset == "Testing", ]

rec <- recipes::recipe(
  HHV ~ carbon + hydrogen + oxygen + nitrogen + sulfur,
  data = biomass_tr
)

scaled_trans <- rec |>
  step_scale_pareto(carbon, hydrogen)

scaled_obj <- recipes::prep(scaled_trans, training = biomass_tr)

transformed_te <- recipes::bake(scaled_obj, biomass_te)

biomass_te[1:10, names(transformed_te)]
transformed_te
generics::tidy(scaled_trans, number = 1)
generics::tidy(scaled_obj, number = 1)
\dontshow{\}) # examplesIf}
}
